package game.gui.wizard;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import engine.io.FileManager;
import game.core.InfinityGame;
import game.setup.GameWizard;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class DeleteGameWizardUI {
    public JPanel mainPanel;
    private JLabel deleteInputLabel;
    private JTextField deleteInputField;
    private JButton findSaveButton;
    private JButton backButton;
    private JButton deleteGameButton;
    private JLabel gameFoundLabel;

    private boolean fileConfirmed = false;

    //this should never be true.
    private boolean deleteDebug = false;

    public DeleteGameWizardUI(DeleteGameWindow currentWindow) {
        fileConfirmed = deleteDebug;
        deleteGameButton.setEnabled(deleteDebug);

        findSaveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String saveName = deleteInputField.getText();

                boolean doesSaveExist = FileManager.doesFileExist(saveName + GameWizard.MAIN_SAVE_EXT);

                if (doesSaveExist || deleteDebug) {
                    deleteGameButton.setEnabled(true);
                    gameFoundLabel.setForeground(Color.GREEN);
                    gameFoundLabel.setText("Game Found!");
                    fileConfirmed = true;
                } else {
                    deleteGameButton.setEnabled(false);
                    gameFoundLabel.setForeground(Color.RED);
                    gameFoundLabel.setText("Game Not Found.");
                    fileConfirmed = false;
                }
            }
        });
        deleteGameButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (fileConfirmed) InfinityGame.gameWizard.deleteGame(deleteInputField.getText());
                currentWindow.dispose();
                new DeleteConfirmationWindow(deleteInputField.getText());
            }
        });
        deleteInputField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                resetCondition();
            }

            public void removeUpdate(DocumentEvent e) {
                resetCondition();
            }

            public void insertUpdate(DocumentEvent e) {
                resetCondition();
            }

            public void resetCondition() {
                fileConfirmed = false;
                deleteGameButton.setEnabled(false);
                gameFoundLabel.setText(" ");
                gameFoundLabel.setForeground(Color.BLACK);
            }
        });
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                currentWindow.dispose();
                new GameWizardWindow();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        deleteInputLabel = new JLabel();
        deleteInputLabel.setText("Game Name:");
        mainPanel.add(deleteInputLabel, new GridConstraints(1, 0, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        deleteInputField = new JTextField();
        mainPanel.add(deleteInputField, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        findSaveButton = new JButton();
        findSaveButton.setText("Find Game");
        mainPanel.add(findSaveButton, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        mainPanel.add(spacer1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        mainPanel.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        backButton = new JButton();
        backButton.setText("Back");
        mainPanel.add(backButton, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        deleteGameButton = new JButton();
        deleteGameButton.setEnabled(false);
        deleteGameButton.setText("Delete Game");
        mainPanel.add(deleteGameButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        gameFoundLabel = new JLabel();
        gameFoundLabel.setEnabled(true);
        gameFoundLabel.setText("");
        mainPanel.add(gameFoundLabel, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
